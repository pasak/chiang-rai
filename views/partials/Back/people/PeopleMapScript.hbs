<script>
    var map, autocomplete_starting, autocomplete;

    var current_place_id = ''

    var component_form = {
        street_number: 'short_name',
        route: 'long_name',
        sublocality_level_1: 'long_name',
        administrative_area_level_2: 'long_name',
        administrative_area_level_1: 'short_name',
        postal_code: 'short_name'
    };

    var map_storage = {
        street_number: '',
        route: '',
        sublocality_level_1: '',
        administrative_area_level_2: '',
        administrative_area_level_1: '',
        postal_code: '',
        place_id: '',
        formatted_address: '',
        point_of_interest: ''
    };

    var geolocation = {
        lat: {{People.Latitude}}, 
        lng: {{People.Longitude}}
    };

    function fill_address(array, place) {
        $.each(place.address_components, function (index, val) {
            var addressType = val.types[0];
            if (component_form[addressType]) {
                array[addressType] = val[component_form[addressType]]
            }
        })
        array["formatted_address"] = place.formatted_address
        array["place_id"] = place.place_id

        $("#location_name").val($("#home-search-location").val())
        $("#location_place_id").val(place.place_id)

        $('#Latitude').val(place.geometry.location.lat);
        $('#Longitude').val(place.geometry.location.lng);
    } // fill_address

    function initMap() {

        map = new google.maps.Map(document.getElementById('home-map'), {
            center: geolocation,
            zoom: 11
        });

        var geocoder = new google.maps.Geocoder();
        var marker = new google.maps.Marker({position: geolocation, map: map});

        google.maps.event.addListener(map, 'click', function (event) {
            marker.setMap(null);

            marker = new google.maps.Marker({
                position: event.latLng,
                map: map,
                title: event.latLng.lat() + ', ' + event.latLng.lng()
            });

            geocoder.geocode({
                'latLng': event.latLng
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        $(current_location).val(results[0].formatted_address);

                        fill_address(map_storage, results[0])
                    }
                }
            });
        });

        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('home-search-location'), {types: []});

        autocomplete.setFields(['place_id', 'address_component', 'geometry', 'formatted_address']);

        autocomplete.addListener('place_changed', function () {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            fill_address(map_storage, place)
            console.log(place)
            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }

            marker.setPosition(place.geometry.location);
            marker.setVisible(true);
        });
    } // initMap

    function geolocate() {

        var circle = new google.maps.Circle({center: geolocation, radius: 30000});

        autocomplete.setBounds(circle.getBounds());
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key={{FormControl.GOOGLE_MAPS_API_KEY}}&libraries=places&callback=initMap"
            async defer></script>
